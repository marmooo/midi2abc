function noteToString(a,d,e){const c=noteToKeyString(a),f=(a.endTime-a.startTime)*d.qpm*e,b=calcKeyLength(f);return b==null?(console.error(a),""):b[0]=="("?b+c:c+b}function chordNoteToString(a,c,d){if(a.length==1)return noteToString(a[0],c,d);const e=a.map(a=>noteToKeyString(a,c)).join(""),f=a[0],g=(f.endTime-f.startTime)*c.qpm*d,b=calcKeyLength(g);return b==null?(console.error(a),""):b[0]=="("?`${b}[${e}]`:`[${e}]${b}`}function noteToKeyString(f){const h=f.pitch,c=["C","^C","D","^D","E","F","^F","G","^G","A","^A","B"],d=h-60,e=d%12,a=Math.floor(d/12);if(a>=1){const d=a-1;let b=c.at(e).toLowerCase();for(let a=0;a<d;a++)b+="'";return b}const g=-a;let b=c.at(e);for(let a=0;a<g;a++)b+=",";return b}function cleanupTempos(c){const a=new Map;c.forEach(b=>{a.set(b.time,b.qpm)});const b=[];for(const[c,d]of a){const e={time:c,qpm:d};b.push(e)}return b}function splitTempos(b,e){let c=0;const d=[],a=cleanupTempos(e);if(a.length==1)return[[b,a[0]]];a.slice(1).forEach((f,g)=>{const e=f.time,h=b.filter(a=>a.startTime<e).filter(a=>c<=a.startTime);d.push([h,a[g]]),c=e});const f=b.filter(a=>c<=a.startTime);return d.push([f,a.at(-1)]),d}function splitInstruments(a){let d=0,b=0;const c=[];return a.forEach((f,e)=>{f.instrument!=d&&(c.push(a.slice(b,e)),d+=1,b=e)}),c.push(a.slice(b)),c}function noteSequenceToChordSequence(c){let b=1/0;const a=[];return c.forEach(c=>{b==c.startTime?a.at(-1).push(c):(b=c.startTime,a.push([c]))}),a}function calcKeyLength(b){const c=60;if(b=Math.round(b*1e6)/1e6,b==c)return"";if(b<=0)return console.error(`duration is negative: ${b}`),null;let a=2;if(b>c){while(b/a>c)a*=2;if(b/a==c)return`${a}`;a/=2;for(let d=2;d<=8;d*=2){const f=2*d-1,e=a*f/d;if(b/e==c)return e==Math.round(e)?`${e}`:`${a*f}/${d}`}a*=4;for(let d=2;d<=9;d++)for(let e=1;e<=d-1;e++)if(b*a*e/d==c)return`(${e}:${d}`;return`${a}`}while(b*a<c)a*=2;if(b*a==c)return`/${a}`;a*=2;for(let d=2;d<=8;d*=2){const e=2*d-1;if(b*a*d/e==c)return`${e}/${d*a}`}a/=4;for(let d=2;d<=9;d++)for(let e=1;e<=d-1;e++)if(b*a*d/e==c)return`(${d}:${e}`;return`/${a}`}function normalizeKey(a,b){return b?(a.forEach(a=>{const c=b[0];a.endTime>c.startTime&&(a.endTime=c.startTime)}),a):a}function durationToRestString(a,b,c,d){if(a<b){const e=(b-a)*c.qpm*d,f=calcKeyLength(e);return f==null?"":"z"+calcKeyLength(e)}return""}function guessClef(a){const b=a.reduce((a,b)=>a+b.pitch,0),c=b/a.length;return c>64?"G2":"F3"}function cleanupTime(b){let a=1/0;return b.forEach(c=>{const b=c.startTime;b<a&&(a=b)}),a!=0&&b.forEach(b=>b.startTime-=a),b}function round(b,a){return Math.round(b*a)/a}function chordNoteToTieString(b,d,e,c){let a="";const f=b[0].endTime;if(b.forEach(a=>a.endTime=sectionEnd),a+=chordNoteToString(b,d.tempos[0],e),round(sectionEnd,1e13)==round(f,1e13))return a+="|",section%4==0&&(a+="\n"),section+=1,sectionEnd=section*c,a;a+="-|";const g=Math.floor((b[0].endTime-b[0].startTime)/c);section%4==0&&(a+="\n");for(let j=1;j<g;j++){const h=section+1,i=h*c;if(b.forEach(a=>{a.startTime=sectionEnd,a.endTime=i}),a+=chordNoteToString(b,d.tempos[0],e),round(i,1e13)==round(f,1e13))return a+="|",h%4==0&&(a+="\n"),section=h,sectionEnd=i,a;a+="-|",h%4==0&&(a+="\n"),section=h,sectionEnd=i}return b.forEach(a=>{a.startTime=sectionEnd,a.endTime=f}),a+=chordNoteToString(b,d.tempos[0],e),section+=1,sectionEnd=section*c,a}function durationToRestStrings(e,b,c,d,f){let a="";if(round(sectionEnd,1e13)<=round(b,1e13)){let g=sectionEnd;if(round(e,1e13)<round(sectionEnd,1e13)){a+=durationToRestString(e,sectionEnd,c,d),a+="|",section%4==0&&(a+="\n"),section+=1,sectionEnd=section*f;const h=Math.floor((b-g)/f);for(let b=0;b<h;b++)a+=durationToRestString(g,sectionEnd,c,d),a+="|",section%4==0&&(a+="\n"),section+=1,g=sectionEnd,sectionEnd=section*f;a+=durationToRestString(g,b,c,d)}else if(round(sectionEnd,1e13)==round(e,1e13)&&(a+="|",section%4==0&&(a+="\n"),section+=1,sectionEnd=section*f),round(b,1e13)<round(sectionEnd,13))a+=durationToRestString(e,b,c,d);else{a+=durationToRestString(e,sectionEnd,c,d),a+="|",section%4==0&&(a+="\n"),section+=1,g=sectionEnd,sectionEnd=section*f;const h=Math.floor((sectionEnd-g)/f);for(let b=0;b<h;b++)a+=durationToRestString(g,sectionEnd,c,d),a+="|",section%4==0&&(a+="\n"),section+=1,g=sectionEnd,sectionEnd=section*f;a+=durationToRestString(g,b,c,d)}}else round(e,1e13)<round(b,1e13)&&(a+=durationToRestString(e,b,c,d));return a}function segmentToString(e,h,i,d){const g=e.timeSignatures[0].numerator/e.timeSignatures[0].denominator,b=2**Math.floor(1/g),c=240/d.qpm*g;let a=setInstrumentHeader(e,h,i,b);section=1,sectionEnd=section*c;const f=noteSequenceToChordSequence(h);return f.forEach((g,i)=>{const h=f[i+1];normalizeKey(g,h),i==0&&g[0].startTime!=0&&(a+=durationToRestStrings(0,g[0].startTime,d,b,c)),round(sectionEnd,1e13)<round(g[0].endTime,1e13)?(a+=chordNoteToTieString(g,e,b,c),h&&(a+=durationToRestStrings(g[0].endTime,h[0].startTime,d,b,c))):(a+=chordNoteToString(g,d,b),h&&(a+=durationToRestStrings(g[0].endTime,h[0].startTime,d,b,c)))}),a+="\n",a}function setInstrumentHeader(g,d,a,e){const b=g.timeSignatures,f=a<=b.length-1?a:b.length-1,c=b[f],h=c.numerator,i=c.denominator;return`L:1/${4*e}
M:${h}/${i}
K:C clef=${guessClef(d)}
V:${a+1}
%%MIDI program ${d[0].program}
`}let section,sectionEnd;export default function(c,a){let b="X:1\n";return a&&(a.title&&(b+=`T:${a.title}\n`),a.composer&&(b+=`C:${a.composer}\n`)),cleanupTime(c.notes),splitTempos(c.notes,c.tempos).forEach(([d,a])=>{b+=`Q:1/4=${Math.round(a.qpm)}\n`,splitInstruments(d).forEach((d,e)=>{section=0,b+=segmentToString(c,d,e,a)})}),b}